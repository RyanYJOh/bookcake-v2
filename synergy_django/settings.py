"""
Django settings for synergy_django project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from decouple import config

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = config("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
# DEBUG = bool(os.environ.get('DJANGO_DEBUG', True))

if DEBUG == True:
    ALLOWED_HOSTS = [
    '127.0.0.1',
    '.bookcake.shop',
    '.bookcake.herokuapp.com',
    '.bookcake.kr'
    ]
elif DEBUG == False:   
    ALLOWED_HOSTS = [
        # '.ec2-54-180-83-4.ap-northeast-2.compute.amazonaws.com',
        '.bookcake.shop',
        '127.0.0.1',
        '.bookcake.herokuapp.com',
        '.bookcake.kr'
    ]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'main.apps.MainConfig',
    'contents.apps.ContentsConfig',

    'corsheaders',
    'rest_framework',
    'bootstrap4',
    'django_summernote',
    'cloudinary_storage',
    'cloudinary',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'whitenoise.middleware.WhiteNoiseMiddleware',
    'corsheaders.middleware.CorsMiddleware',
	'django.middleware.common.CommonMiddleware',
]

ROOT_URLCONF = 'synergy_django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'synergy_django.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         # 'NAME' : BASE_DIR / 'db.sqlite3', 어느 블로그에서 이렇게 하라고 했는데 에러남
#         # 'NAME' : BASE_DIR,
#         'NAME' : os.path.join(BASE_DIR, 'db.sqlite3')
#     }
# }

import dj_database_url

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'd6mbbdav1j4l6k', # pgAdmin에서 설정한 DB이름
        'USER': 'nkipwytzpgijao',
        'PASSWORD' : 'd712a0eec104196bbe0a6d8759a1f7150076b4eb033857299f014b244e976e03',
        # 'PASSWORD': config("DB_PASSWORD"), # pgAdmin에서 정한 패스워드
        'HOST': 'ec2-52-202-152-4.compute-1.amazonaws.com',
        'PORT': '5432', # Postgres 디폴트
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

# PRODUCTION
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': 'd6mbbdav1j4l6k', 
#         'USER': 'nkipwytzpgijao',
#         'PASSWORD': 'd712a0eec104196bbe0a6d8759a1f7150076b4eb033857299f014b244e976e03',
#         'HOST': 'c2-52-202-152-4.compute-1.amazonaws.com',
#         'PORT': 5432, # Postgres 디폴트
#     }
# }

db_from_env = dj_database_url.config(conn_max_age=500)
DATABASES['default'].update(db_from_env)

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [ 
    os.path.join(BASE_DIR, 'static'), 
    os.path.join(BASE_DIR, 'main/static'),
    # os.path.join(BASE_DIR, 'member/static'),
    # os.path.join(BASE_DIR, 'register/static'),
]

## 운영서버 배포시 static 파일을 `collectstatic`하기 위한 절대 경로.
# STATIC_ROOT = BASE_DIR / 'staticfiles'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

### CLOUDINARY settings START
CLOUDINARY_STORAGE = {
    'CLOUD_NAME' : 'hmda2w5rt',
    'API_KEY' : config("CLOUDINARY_API_KEY"),
    'API_SECRET' : config("CLOUDINARY_API_SECRET"),
}
DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'
### CLOUDINARY settings END

MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
'''
When debug option is enabled(DEBUG=True), DO NOT forget to add urlpatterns as shown below:

from django.conf import settings
from django.conf.urls.static import static

if settings.DEBUG:
    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)

'''

SUMMERNOTE_THEME = 'bs4'
SUMMERNOTE_CONFIG = {
    
    'summernote': {
        'fontNames': ['NanumSquare'],
    },
}

## 어드민에서 Django-summernote를 쓸 때, 아래를 적어주지 않으면 
X_FRAME_OPTIONS = 'ALLOWALL'
XS_SHARING_ALLOWED_METHODS = ['POST','GET','OPTIONS', 'PUT', 'DELETE']
## Refused to display 'http://127.0.0.1:8000/summernote/editor/id_body/' in a frame because it set 'X-Frame-Options' to 'deny'.
## 라는 에러가 뜬다! 

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://localhost:5000",
    "https://www.bookcake.kr",
]